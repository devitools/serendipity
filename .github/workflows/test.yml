on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      COMPOSE_RUNNER: "docker compose"
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Cache Docker images.
        uses: ScribeMD/docker-cache@0.5.0
        with:
          key: docker-${{ runner.os }}-${{ hashFiles('compose.yaml') }}

      - name: Checkout current code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git permissions
        run: git config --global --add safe.directory /__w/serendipity/serendipity

      - name: Setup the application environment
        run: make install

      - name: Put everything up
        run: make up

      - name: Wait until 1 minute for postgres be ready to GO
        uses: nick-fields/retry@v3
        with:
          timeout_seconds: 60
          retry_wait_seconds: 10
          max_attempts: 6
          warning_on_retry: false
          command: docker compose exec postgres pg_isready

      - name: Configure database environment
        run: make migrate

      - name: Run tests and generate coverage
        run: make test

      - name: Run SonarCloud analysis
        run: make sonar
