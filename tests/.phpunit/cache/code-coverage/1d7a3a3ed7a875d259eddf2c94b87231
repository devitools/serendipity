a:6:{s:9:"classesIn";a:1:{s:57:"Backbone\Infrastructure\Persistence\Testing\SleekDBHelper";a:6:{s:4:"name";s:13:"SleekDBHelper";s:14:"namespacedName";s:57:"Backbone\Infrastructure\Persistence\Testing\SleekDBHelper";s:9:"namespace";s:43:"Backbone\Infrastructure\Persistence\Testing";s:9:"startLine";i:14;s:7:"endLine";i:90;s:7:"methods";a:9:{s:11:"__construct";a:6:{s:10:"methodName";s:11:"__construct";s:9:"signature";s:141:"__construct(Backbone\Infrastructure\Persistence\Factory\SleekDBDatabaseFactory $factory, Backbone\Infrastructure\Testing\TestCase $assertion)";s:10:"visibility";s:6:"public";s:9:"startLine";i:20;s:7:"endLine";i:26;s:3:"ccn";i:1;}s:8:"truncate";a:6:{s:10:"methodName";s:8:"truncate";s:9:"signature";s:32:"truncate(string $resource): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:28;s:7:"endLine";i:32;s:3:"ccn";i:1;}s:4:"seed";a:6:{s:10:"methodName";s:4:"seed";s:9:"signature";s:85:"seed(string $type, string $resource, array $override): Backbone\Domain\Support\Values";s:10:"visibility";s:6:"public";s:9:"startLine";i:34;s:7:"endLine";i:47;s:3:"ccn";i:1;}s:9:"assertHas";a:6:{s:10:"methodName";s:9:"assertHas";s:9:"signature";s:49:"assertHas(string $resource, array $filters): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:49;s:7:"endLine";i:59;s:3:"ccn";i:1;}s:5:"count";a:6:{s:10:"methodName";s:5:"count";s:9:"signature";s:44:"count(string $resource, array $filters): int";s:10:"visibility";s:7:"private";s:9:"startLine";i:61;s:7:"endLine";i:65;s:3:"ccn";i:1;}s:4:"json";a:6:{s:10:"methodName";s:4:"json";s:9:"signature";s:28:"json(array $filters): string";s:10:"visibility";s:7:"private";s:9:"startLine";i:67;s:7:"endLine";i:74;s:3:"ccn";i:2;}s:12:"assertHasNot";a:6:{s:10:"methodName";s:12:"assertHasNot";s:9:"signature";s:52:"assertHasNot(string $resource, array $filters): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:76;s:7:"endLine";i:79;s:3:"ccn";i:1;}s:14:"assertHasCount";a:6:{s:10:"methodName";s:14:"assertHasCount";s:9:"signature";s:69:"assertHasCount(int $expected, string $resource, array $filters): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:81;s:7:"endLine";i:84;s:3:"ccn";i:1;}s:13:"assertIsEmpty";a:6:{s:10:"methodName";s:13:"assertIsEmpty";s:9:"signature";s:37:"assertIsEmpty(string $resource): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:86;s:7:"endLine";i:89;s:3:"ccn";i:1;}}}}s:8:"traitsIn";a:0:{}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:91;s:18:"commentLinesOfCode";i:3;s:21:"nonCommentLinesOfCode";i:88;}s:15:"ignoredLinesFor";a:1:{i:0;i:14;}s:17:"executableLinesIn";a:29:{i:24;i:3;i:25;i:4;i:30;i:5;i:31;i:6;i:36;i:8;i:38;i:9;i:39;i:10;i:40;i:11;i:41;i:12;i:42;i:13;i:43;i:14;i:45;i:15;i:46;i:16;i:51;i:17;i:52;i:17;i:53;i:17;i:54;i:17;i:55;i:17;i:56;i:17;i:57;i:17;i:58;i:17;i:63;i:19;i:64;i:20;i:70;i:21;i:71;i:22;i:72;i:23;i:79;i:24;i:84;i:25;i:89;i:26;}}